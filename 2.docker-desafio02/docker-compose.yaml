version: '3.8'
volumes:
  mysql_data:

services:

  nginx:
    build:
      context: nginx
      dockerfile: dockerfile.prod
    container_name: nginx
    restart: always
    entrypoint: /bin/sh -c "dockerize -wait tcp://app:3000 -timeout 30s && /docker-entrypoint.sh nginx -g 'daemon off;'"
    tty: true
    networks: 
      - node-network
    ports:
      - "8080:80"
    depends_on:
      - app

  app:
    build:
      context: node
      dockerfile: dockerfile.prod
    working_dir: /usr/src/app
    container_name: app
    restart: always
    #entrypoint: dockerize -wait tcp://db:3306 -timeout 30s node index.js
    entrypoint: dockerize -wait tcp://db:3306 -timeout 30s bash /usr/src/app/entrypoint.sh  # Run the entrypoint script
    volumes:
      - ./node:/usr/src/app
    tty: true
    networks: 
      - node-network
    ports:
      - "3000:3000"
    depends_on:
      - db


  db:
    image: mysql:5.7
    command: --innodb-use-native-aio=0
    container_name: db
    restart: always
    tty: true
    volumes:
      - mysql_data:/var/lib/mysql # mysql_data volume is located at /var/lib/docker/volumes/practice_mysql_data/_data
      # - ./mysql_data:/var/lib/mysql # mysql_data located at same folder
      - ./mysql_conf/setup.sql:/docker-entrypoint-initdb.d/setup.sql
    environment:
      - MYSQL_DATABASE=nodedb
      - MYSQL_ROOT_PASSWORD=root
    networks:
      - node-network

networks:
  node-network:
    driver: bridge